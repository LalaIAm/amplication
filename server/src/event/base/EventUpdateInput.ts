/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserUpdateManyWithoutEventsInput } from "./UserUpdateManyWithoutEventsInput";
import { ValidateNested, IsOptional, IsDate, IsString } from "class-validator";
import { Type } from "class-transformer";
import { HouseholdCalendarWhereUniqueInput } from "../../householdCalendar/base/HouseholdCalendarWhereUniqueInput";
import { LocationWhereUniqueInput } from "../../location/base/LocationWhereUniqueInput";
@InputType()
class EventUpdateInput {
  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  attending?: UserUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date?: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => HouseholdCalendarWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HouseholdCalendarWhereUniqueInput)
  @IsOptional()
  @Field(() => HouseholdCalendarWhereUniqueInput, {
    nullable: true,
  })
  householdCalendar?: HouseholdCalendarWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LocationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => LocationWhereUniqueInput)
  @IsOptional()
  @Field(() => LocationWhereUniqueInput, {
    nullable: true,
  })
  location?: LocationWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  time?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string;
}
export { EventUpdateInput };
